function DFT_to_FFT
%% - от ДПФ к ПРАВИЛЬНОМУ ПРИМИНЕНИЮ функции FFT MATLAB - библиотека FFTW -
% ------ Разработчик: студент 5 курса СФУ ИИФиРЭ Дранишников А.С. ---------

% ЗАМЕЧАНИЯ:
% ---------- рассматривается четная функция имеющая центр симметрии по
% оси Х -----
%           фаза сигнала (рад.) интеграл по времени от частоты (рад/сек),
%           а частота производная по времени от фазы сигнала 
% 0. частотно - временная характеристика блока FFT exp(-1i*2*pi*n/N) - есть
%    прямое БПФ вектор крутится против часовой (комплексная плоскость),
%    exp(1i*2*pi*n/N) обратное БПФ, вектор крутится по часовой.
% 1. Fs - частота дискретизации: (2*Fmax) спектра, это не размерность
%    анализируемой реализации (N).
% 2. повышение разрешения по частоте: путем увеличения размерности (N) или
%    повышения частоты дискретизации (Fd)
% 3. в интернете и документации matlab найдены способы вычисления фазового
%   спектра: непосредственное применение FFT не дает правильного фазовго
%   спектра, не путать с развертыванием фазы. Фаза получается пилообразной,
%   можно сынтерпретировать что в каждом лепестке она меняется дискретно и
%   линейное ее изменение это верно, однако вычислив непосредственное ДПФ 
%   вы поймете что это не так. 
% 3.1. по правильно рассчитанному амплитудному спектру выделяют гармоники
%      фазы, путем наложения маски на фазовый спектр 
%      (я не читаю этот путь верным)
% 3.2. оставляют пилообразный такой как есть
% 3.3. разворачивают и говорят что так верно
% 3.4  вычисляют только амплитудный спектр без фазового FFT
% 3.5 сдвиг образа относительно центра симметрии дает наклон фазового
%     спектра влево или в право при условии если он правильно вычислен
% 3.6 сдвиг образа не влияет на гармоники амплитудного спектра
% 3.7 нуль первого лепестка 2*pi/tau, tau - длительность импульса
% 3.8 УБЛ бокового -13.2 дБ соответствует верному, нули спектра в log
%     масштабе преобразовались в формат данных inf
% 4 ПРИЧИНА линейной фазы: в отсутствии привязки ко времени, БПФ (FFT)
%           работает только с массивами отчетов, FFT не знает вектора времени
%           exp(-1i*2*pi*k/N), k - текущий отчет образа (вектор строка),
%           N - размерность вектор строки.
% 5. УСТРАНЕНИЕ причины: применение к комплексному результату FFT теоремы о
%               сдвиге для частотной области, то есть докручивание фазового
%               спектра на текущие фазовые множители
% ВНИМАНИЕ: никаких алгоритмических искажений в комбинаторике FFT нет

%  - - - - - - -  С-Т-Р-У-К-Т-У-Р-А    С-К-Р-И-П-Т-А  - - - - - - - - - - - 
% 1 ============ ОДНОМЕРНЫЙ СЛУЧАЙ ПРИМИНЕНИЯ FFT ИЗ FFTW =================
% 2 ============= ДПФ по базисам COS, SIN, EXP --- БЕЗ УСКОРЕНИЙ ==========
% 3 == БПФ & ДПФ на двумерном четном образе, симметричный, действительный =
% - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

%% ============== ОДНОМЕРНЫЙ СЛУЧАЙ ПРИМИНЕНИЯ FFT ИЗ FFTW ================
% == неявная модель образа (число отчетов строго 2^n) (временная область) =
N = 512;                % Размерность реализации, точки
l = 2*pi;               % Предел по вектору времени, сек
t = linspace(-l,...
              l,...
              N);       % Вектор времени, сек
f = zeros(1,N);         % Вектор - строка из нулей
L = [];                 % Резервация переменной под образ
for i = 1 : N
    if abs(t(i)) <= 0.1 % Образ симметричен интевалу
        f(i) = 1;
        L = [L i];      % Накопление отчетов образа
    else
        f(i) = 0;
    end
end
Fs = N;                 % Частота дискретизации образа привязана к N
dt = (2*l)/N;           % Временной интервал, сек
df = (2*pi)/(Fs*dt);    % Разрешение по частоте, рад/с
% 1.0 ============ преобразование FFT ============ (частотная область) ====
size_x = 1;                   % Увеличиваемая размерность fft
NFFT = size_x*2^(nextpow2(Fs)); % Объединение Fs c шириной окна NFFT
freq = (Fs/2)*(-NFFT/2 : NFFT/2 - 1)/NFFT; % Вектор частот, рад/с
tic;
s_fft = fftshift(fft(f,...    % FFT со сдвигом к 0 - й частоте
                     NFFT));  % Размерность окна (прямоугольник - умолчание)
q1 = toc;
% 2.0 ==== последовательная теорема о сдвиге в частотной области ==========
phi = angle(s_fft).*180/pi;     % Истинный фазовый спектр от FFT 
tic;
for n = 1 : NFFT                % номера гармоник
    for k = 1 :  NFFT           % номера отчетов сигнала 
        s_fft(n) = s_fft(n)*exp(-1i*2*pi*n*k/(NFFT^2)); % сдвиг
    end 
end
q2 = toc;
abs_s_fft = 20*log10(abs(s_fft)./numel(L)); % Амплитудный спектр, В/(рад/с)
phi_s_fft = -angle(s_fft);      % Фазовый спектр без развертки, рад
un_phi_s_fft = unwrap(phi_s_fft).*180/pi; % Фазовый спектр развернутый, рад
phi_s_fft = phi_s_fft.*180/pi;
% ======================== визуализация данных ============================
disp('------- Одномерное БПФ (Кули - Тьюки ) --------');
disp(strcat('Размерность вектор - строки:', num2str(NFFT)));
disp( strcat('Одномерное БПФ: ',...
              num2str(q1),...
              ' сек'));
disp( strcat('Одномерный сдвиг: ',...
              num2str(q2),...
              ' сек'));
disp( strcat('Общее затраты времени:',...
              num2str(q1 + q2),...
              ' сек'));
% -------------------------------------------------------------------------
tx1 = 'fontsize';
tx2 = {12};
tx3 = 'fontname';
tx4 = 'times new roman';
tx = [tx1 tx2 tx3 tx4]; clear tx1 tx2 tx3 tx4;
% -------------------------------------------------------------------------
figure('name','Быстрое преобразование Фурье','numbertitle','off');
subplot(5,1,1);
plot(t, f, 'linewidth', 2); grid on;
title('Анализируемый образ',...
      tx(1), tx(2) ,tx(3), tx(4));
xlabel('Время, с',...
       tx(1), tx(2) ,tx(3), tx(4));
ylabel('Амплитуда, В',...
        tx(1), tx(2) ,tx(3), tx(4));
subplot(5,1,2);
plot(freq, abs_s_fft,...
    'linewidth',2);
grid on;
title('Амплитудный спектр',...
       tx(1), tx(2) ,tx(3), tx(4));
xlabel('Частота, \omega (рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
ylabel('|(F_{БПФ}(j\omega)|, дБ/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
subplot(5,1,3); 
plot(freq, phi_s_fft,...
    'linewidth',2);
grid on;
title('Фазовый спектр без развертки',...
       tx(1), tx(2) ,tx(3), tx(4));
xlabel('Частота, \omega (рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
ylabel('arg(F_{БПФ}(j\omega), °/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
subplot(5, 1, 4); 
plot(freq, un_phi_s_fft,...
    'linewidth',2);
grid on;
title('Развернутый фазовый спектр',...
       tx(1), tx(2) ,tx(3), tx(4));
xlabel('Частота, \omega (рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
ylabel('arg(F_{exp}(j\omega), °/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
subplot(5,1,5);
plot(freq, phi,'linewidth',2);
grid on;
title('Фазовый спектр от БПФ (Кули - Тьюки)',...
       tx(1), tx(2) ,tx(3), tx(4));
xlabel('Частота, \omega (рад/с)',...
       tx(1), tx(2) ,tx(3), tx(4));
ylabel('arg(F_{БПФ}(j\omega), °/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
clear all;
%% ============= ДПФ по базисам SIN, COS, EXP --- БЕЗ УСКОРЕНИЙ ===========
% ОСОБЕННОСТИ примера с ДПФ:
% 1. сумма интеграла привязана к вектору времени, поэтому отсутствует
%    необходимость до ворачивать фазовый спектр
% 2. разрешено изменение разрешения по времени и по частоте с 
%    просмотром спектров (периодизация, например 4*Fs - 4 копии а также 
%    эффект аляйсинга - наложение гармоник
% == неявная модель образа (число отчетов строго 2^n) (временная область) =
t =  -pi : 0.01 : pi; % Вектор времени, сек (центрально - симметричный)
f = zeros(size(t));   % Вектор - строка нулей
L = [];               % Резервация переменной
for i = 1 : length(t)
    if abs(t(i)) <= 0.1   % Часть периода
        f(i) = 1;
        L = [L i];        % Отчеты на модель сигнала
    else
        f(i) = 0;
    end
end
% ------------------- Одномерное ДПФ "Интегральное" -----------------------
% 1.суммирование искажает фазовый спектр, применяем интеграл методом трапеций
% 2. нормировка от суммы  - есть размерность образа без нулей
% 3. нормировка интеграла - есть норма функции
omega = linspace(-127,...   % Наименьшая частота, (рад/с)
                  127,...   % Наибольшая частота, (рад/с)
                  512);     % Размерность вектор - строки частот
tic;
for i = 1 : length(omega)
    F_cos(i) = trapz(t, f.*cos(omega(i)*t));      % Косинусное ДПФ
end
q1 = toc;
tic;
for i = 1 : length(omega)
    F_sin(i) = trapz(t, f.*sin(omega(i)*t));      % Синусное ДПФ
end
q2 = toc;
tic;
for i = 1 : length (omega)
    F_exp(i) = trapz(t, f.*exp(-1i*omega(i)*t));  % Комплексное ДПФ
end
q3 = toc;
F_phi_cos = angle(F_cos);               % Угла вектора (фаза), рад
ph_cos = unwrap(F_phi_cos).*180/pi;     % Развертка фазы методом Шафера
F_phi_cos = F_phi_cos.*180/pi;          % Преобразование в градус/(рад/с);
% ---------------------------------------
F_phi_sin = angle(F_sin);
ph_sin = unwrap(F_phi_sin).*180/pi;     % Преобразование Градус/(рад/с);
F_phi_sin = F_phi_sin.*180/pi;
% ---------------------------------------
F_phi_exp = angle(F_exp);
ph_exp = unwrap(F_phi_exp).*180/pi;
F_phi_exp = F_phi_exp.*180/pi;
% ---------------------------------------
F_abs_cos =  20*log10(abs(F_cos)); % Вычисление амплитуды вектора, дБ/(рад/с)
F_abs_sin =  20*log10(abs(F_sin));
F_abs_exp =  20*log10(abs(F_exp));
% ======================== визуализация данных ============================
disp('----------- Одномерное ДПФ по базисам COS, SIN, EXP --------------');
disp(strcat('Размерность вектор - строки:', num2str(length(F_abs_exp))));
disp( strcat('Время на SIN ДПФ: ',...
              num2str(q2),...
              ' сек'));
disp( strcat('Время на COS ДПФ: ',...
              num2str(q1),...
              ' сек'));
disp( strcat('Время на комплексное ДПФ: ',...
              num2str(q3),...
              ' сек'));
% -------------------------------------------------------------------------
tx1 = 'fontsize';
tx2 = {12};
tx3 = 'fontname';
tx4 = 'times new roman';
tx = [tx1 tx2 tx3 tx4]; clear tx1 tx2 tx3 tx4;
% -------------------------------------------------------------------------
figure('name','Косинусное ДПФ без ускорений','numbertitle','off');
subplot(4,1,1); 
plot(t,f,'LineWidth',2);
grid on; 
ylim([0 1.5]);
xlabel('Время, сек',...
        tx(1), tx(2) ,tx(3), tx(4));
ylabel('Амплитуда, В',...
        tx(1), tx(2) ,tx(3), tx(4));
title('Анализируемый образ',...
        tx(1), tx(2) ,tx(3), tx(4));
subplot(4,1,2); 
plot(omega ,F_abs_cos,...
    'LineWidth',2);
grid on;
title('Амплитудный спектр COS преобразования',...
       tx(1), tx(2) ,tx(3), tx(4));
xlabel('Угловая частота, \omega (рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
ylabel('|F_{cos}(j\omega)|, дБ/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
subplot(4,1,3); 
plot(omega, F_phi_cos,...
    'LineWidth',2); grid on;
title('Фазовый спектр COS преобразования',...
       tx(1), tx(2) ,tx(3), tx(4));
xlabel('Угловая частота, \omega (рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
ylabel('arg(F_{cos}(j\omega)), °/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
subplot(4,1,4);
plot(omega, ph_cos,'linewidth',2);
grid on;
title('Развернутый фазовый спектр',...
       tx(1), tx(2) ,tx(3), tx(4));
xlabel('Угловая частота, \omega (рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
ylabel('arg(F_{cos}(j\omega)), °/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
% -------------------------------------------------------------------------
figure('name','Синусное ДПФ', 'numbertitle','off');
subplot(4,1,1); 
plot(t,f,'LineWidth',2); 
grid on; 
ylim([0 1.5]);
xlabel('Время, сек',...
        tx(1), tx(2) ,tx(3), tx(4));
ylabel('Амплитуда, В',...
        tx(1), tx(2) ,tx(3), tx(4));
title('Анализируемый образ',...
        tx(1), tx(2) ,tx(3), tx(4));
subplot(4,1,2); 
plot(omega,F_abs_sin,...
    'LineWidth',2);
grid on;
title('Амплитудный спектр SIN преобразования',...
        tx(1), tx(2) ,tx(3), tx(4));
xlabel('Угловая частота, \omega (рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
ylabel('|F_{sin}(j\omega)|, дБ/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
subplot(4,1,3); 
plot(omega,F_phi_sin,...
    'LineWidth',2);
grid on;
title('Фазовый спектр SIN преобразования',...
       tx(1), tx(2) ,tx(3), tx(4));
xlabel('Угловая частота, \omega (рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
ylabel('arg(F_{sin}(j\omega)), °/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
subplot(4,1,4);
plot(omega, ph_sin,...
    'linewidth',2);
grid on;
title('Развернутый фазовый спектр',...
       tx(1), tx(2) ,tx(3), tx(4));
xlabel('Угловая частота, \omega (рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
ylabel('arg(F_{sin}(j\omega)), °/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
% -------------------------------------------------------------------------
figure('name','Комплексное ДПФ','numbertitle','off');
subplot(4,1,1);
plot(t,f,'LineWidth',2);
grid on;
ylim([0 1.5]);
xlabel('Время, сек',...
        tx(1), tx(2) ,tx(3), tx(4));
ylabel('Амплитуда, В',...
        tx(1), tx(2) ,tx(3), tx(4));
title('Анализируемый образ',...
       tx(1), tx(2) ,tx(3), tx(4));
subplot(4,1,2); 
plot(omega, F_abs_exp,...
    'LineWidth', 2);
grid on;
title('Амплитудный спектр комплексного преобразования',...
       tx(1), tx(2) ,tx(3), tx(4));
xlabel('Угловая частота, \omega (рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
ylabel('|(F_{exp}(j\omega))|, дБ/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
subplot(4,1,3); 
plot(omega, F_phi_exp,'LineWidth',2);
grid on;
hold on;
title('Фазовый спектр комплексного преобразования',...
       tx(1), tx(2) ,tx(3), tx(4));
xlabel('Угловая частота, \omega (рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
ylabel('arg(F_{exp}(j\omega)), °/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
subplot(4,1,4);
plot(omega, ph_exp,...
     'linewidth',2, 'color','red');
grid on;
title('Развернутый фазовый спектр',...
       tx(1), tx(2) ,tx(3), tx(4));
xlabel('Угловая частота, \omega (рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
ylabel('arg(F_{exp}(j\omega)), °/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
clear all;
%% == БПФ & ДПФ на двумерном четном образе, симметричный, действительный ===
% 1. суммирование искажает фазовый спектр, применяем интеграл методом трапеций
% 2. нормировка от суммы  - есть размерность образа без нулей
% 3. нормировка интеграла - есть норма функции
% ------ задаение пространственного образа в неявном виде -----------------
N = 512;                 % Размерность образа
l = 2*pi;                % Предел длины, мм
t = linspace(-l,...
              l,...
              N);        % Вектор длины, мм
f = zeros(1,N);          % Вектор - строка из нулей
L = [];                  % Резервация переменной для образа
for i = 1 : N
    if abs(t(i)) <= 0.1  % Симметрия образа
        f(i) = 1;
        L = [L i];       % Отчеты на образ
    else
        f(i) = 0;
    end
end
f = f'*f;                % Образ в объеме
            %lx = meshgrid(t);       % Координатная сетка X
            %ly = lx';               % Координатная сетка Y
Fs_x = N;
Fs_y = N;
size_x = 1; 
size_y = 1;
NFFT_X = size_x*2^(nextpow2(Fs_x));    % Размерность X
NFFT_Y = size_y*2^(nextpow2(Fs_y));    % Размерность Y
freq_x = (Fs_x/2)*(-NFFT_X/2 : NFFT_X/2 - 1)/NFFT_X; % Вектор частот, рад/с
freq_y = (Fs_y/2)*(-NFFT_Y/2 : NFFT_Y/2 - 1)/NFFT_Y; % Вектор частот, рад/с
tic;
s_fft = fftshift(fft2(f,...
                      NFFT_X, NFFT_Y)); % Вычисление прямого образа Фурье
q1 = toc;
abs_s_fft =  20*log10(abs(s_fft)/(numel(L)^2));
% == Двумерная теорема последовательного сдвига в частотной области =======
phi = angle(s_fft).*180/pi;              % Истинный фазовый спектр от FFT2 
phi_unwr = unwrap(angle(s_fft)).*180/pi; % Истинный, развернутый
tic;
for n = 1 : NFFT_X           % Номера гармоник по оси freqX
    for k = 1 : NFFT_X       % Номера отчетов образа по оси X
        s_fft(n,:) = s_fft(n,:).*exp(-1i*2*pi*n*k/(NFFT_X^2));
    end
end
for n = 1 : NFFT_Y           % Номера гармоник по оси freqY
    for k = 1 : NFFT_Y       % Номера отчетов образа по оси Y 
        s_fft(:,k) = s_fft(:,k).*exp(-1i*2*pi*n*k/(NFFT_Y^2));
    end
end
q2 = toc;
phi_s_fft = -angle(s_fft);
un_phi_s_fft = unwrap(phi_s_fft).*180/pi;  % Развернутый ФС, °/(рад/с)
phi_s_fft = phi_s_fft.*180/pi;
% ================ Двумерное "Аналоговое" ДПФ без ускорений  ==============
tic;
for n1 = 1 : NFFT_X             % Вектор - строка пространственного отчета
    for k1 = 1 : length(freq_x) % Вектор - строка гармоники
        D(k1, n1) = trapz(t, f(:, n1)'.*exp(-1i*freq_x(k1)*t)); % - ЧИСЛО -                
    end
end
for n2 = 1 : NFFT_Y             % Вектор - столбец пространственного отчета
    for k2 = 1 : length(freq_y) % Вектор - столбец гармоники
        W(n2, k2) = trapz(t, D(n2, :).*exp(-1i*freq_y(k2)*t));
    end
end
q3 = toc;
clear D;
am = 20*log10(abs(W));
ph = angle(W)*180/pi;
c_am = am(:, NFFT_X/2);
c_ph = ph(:, NFFT_Y/2);
% ======================== визуализация данных ============================
disp('------------ Двумерное ДПФ и БПФ -----------');
disp(strcat('Размерность матрицы БПФ(Кули - Тьюки), ДПФ:',...
             num2str(NFFT_X),...
            'на',...
             num2str(NFFT_Y)));
disp( strcat('Время на БПФ: ',...
              num2str(q1),...
              ' сек'));
disp( strcat('Корректировка фазового спектра БПФ: ',...
              num2str(q2),...
              ' сек'));
disp( strcat('Время с коррекцией на БПФ (Кули - Тьюки):',...
              num2str(q1 + q2),...
             ' сек'));
disp( strcat('Аналоговое ДПФ: ',...
              num2str(q3),...
              ' сек'));    
disp( '-------------------------------------------' );
% -------------------------------------------------------------------------
tx1 = 'fontsize';
tx2 = {12};
tx3 = 'fontname';
tx4 = 'times new roman';
tx = [tx1 tx2 tx3 tx4]; clear tx1 tx2 tx3 tx4;
% -------------------------------------------------------------------------
figure('name','Результаты ДПФ без ускорений','numbertitle','off');
subplot(2,1,1);
surf(freq_x, freq_y, am); shading interp; 
view(0,90);
xlim([freq_x(1) freq_x(end)]);
ylim([freq_y(1) freq_y(end)]);
colorbar('FontSize',12,...
         'FontName','Times New Roman',...
         'Color',[0 0 0], 'location','EastOutside');
colormap('default');
colorbar('YTickLabel',strcat(get(colorbar,'YTickLabel'), 'дБ' ));
title('Амплитудный спектр',...
       tx(1), tx(2) ,tx(3), tx(4)); 
xlabel('Частота, \omega_{X} (рад/с)', ...
        tx(1), tx(2) ,tx(3), tx(4));
ylabel('Частота, \omega_{Y} (рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
zlabel('|(F_{ДПФ2}(j\omega_X, j\omega_Y)|, дБ/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
subplot(2,1,2);
surf(freq_x, freq_y, ph); shading interp;
xlim([freq_x(1) freq_x(end)]);
ylim([freq_y(1) freq_y(end)]);
view(0,90); 
colorbar('FontSize',12,...
         'FontName','Times New Roman',...
         'Color',[0 0 0], 'location','EastOutside');
colorbar('YTickLabel',strcat(get(colorbar,'YTickLabel'), '°/(рад/с)' ));
colormap('default');
title('Фазовый спектр',...
       tx(1), tx(2) ,tx(3), tx(4)); 
xlabel('Частота, \omega_{X} (рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
ylabel('Частота, \omega_{Y} (рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
zlabel('arg(F_{ДПФ2}(j\omega_X, \omega_Y), °/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
% -------------------------------------------------------------------------
figure('name','Сечение результатов ДПФ без ускорений','numbertitle', 'off');
subplot(2,1,1); shading interp;
plot(freq_x, c_am, 'Linewidth', 2); grid on;
title('Сечение амплитудного спектра (главное)',...
       tx(1), tx(2) ,tx(3), tx(4)); 
xlabel('Частота, \omega (рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
ylabel('|(F_{ДПФ}(j\omega_X)|, дБ/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
subplot(2,1,2);
plot(freq_x, c_ph, 'Linewidth', 2); grid on;
title('Сечение фазового спектра (главное)',...
       tx(1), tx(2) ,tx(3), tx(4)); 
xlabel('Частота, \omega (рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
ylabel('arg((F_{ДПФ}(j\omega_X)), °/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
% -------------------------------------------------------------------------
figure('name','Анализируемый образ','numbertitle','off');
surf(t, t, f); shading interp;
grid on; 
view(0,90); 
title('Прямоугольный образ в пространстве',...
       tx(1), tx(2) ,tx(3), tx(4));
xlabel('Длина_X mm', tx(1), tx(2) ,tx(3), tx(4));
ylabel('Длина_Y mm', tx(1), tx(2) ,tx(3), tx(4));
zlabel('Высота,  mm', tx(1), tx(2) ,tx(3), tx(4));
colorbar('FontSize',12,...
         'FontName','Times New Roman',...
         'Color',[0 0 0], 'location','EastOutside');
colorbar('YTickLabel',strcat(get(colorbar,'YTickLabel'), 'mm' ));
colormap('default');
% -------------------------------------------------------------------------
figure('name','Результаты БПФ Кули - Тьюки','numbertitle','off');
surf(freq_x, freq_y, abs_s_fft); grid on; shading interp; view(0,90);
xlim([freq_x(1) freq_x(end)]);
ylim([freq_y(1) freq_y(end)]);
title('Амплитудный спектр', tx(1), tx(2) ,tx(3), tx(4));
xlabel('Частота, \omega_{X} (рад/с)', tx(1), tx(2) ,tx(3), tx(4));
ylabel('Частота, \omega_{Y} (рад/с)', tx(1), tx(2) ,tx(3), tx(4));
zlabel('|(F_{БПФ2}(j\omega_X, j\omega_Y)|, дБ/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
colorbar('FontSize',12,...
         'FontName','Times New Roman',...
         'Color',[0 0 0], 'location','EastOutside');
colorbar('YTickLabel',strcat(get(colorbar,'YTickLabel'), 'дБ/(рад/с)' ));
colormap('default');
% -------------------------------------------------------------------------
figure('name','Результаты БПФ Кули - Тьюки','numbertitle','off');
surf(freq_x, freq_y, phi_s_fft); grid on; shading interp; view(0,90);
xlim([freq_x(1) freq_x(end)]);
ylim([freq_y(1) freq_y(end)]);
title('Фазовый спектр без развертки, корректирован теоремой о сдвиге',...
       tx(1), tx(2) ,tx(3), tx(4));
xlabel('Частота, \omega_{X} (рад/с)', tx(1), tx(2) ,tx(3), tx(4));
ylabel('Частота, \omega_{Y} (рад/с)', tx(1), tx(2) ,tx(3), tx(4));
zlabel('arg((F_{БПФ2}(j\omega_X, j\omega_Y)), °/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
colorbar('FontSize',12,...
         'FontName','Times New Roman',...
         'Color',[0 0 0], 'location','EastOutside');
colorbar('YTickLabel',strcat(get(colorbar,'YTickLabel'), '°/(рад/с)' ));
colormap('default');
% -------------------------------------------------------------------------
figure('name','Результаты БПФ Кули - Тьюки',...
              'numbertitle','off');
surf(freq_x, freq_y, un_phi_s_fft); grid on; shading interp; view(0,90);
xlim([freq_x(1) freq_x(end)]);
ylim([freq_y(1) freq_y(end)]);
title('Развернутый фазовый спектр корректированный теоремой о сдвиге',...
       tx(1), tx(2) ,tx(3), tx(4));
xlabel('Частота, \omega_{X} (рад/с)', tx(1), tx(2) ,tx(3), tx(4));
ylabel('Частота, \omega_{Y} (рад/с)', tx(1), tx(2) ,tx(3), tx(4));
zlabel('arg((F_{БПФ2}(j\omega_X, j\omega_Y)), °/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
colorbar('FontSize',12,...
         'FontName','Times New Roman',...
         'Color',[0 0 0], 'location','EastOutside');
colorbar('YTickLabel',strcat(get(colorbar,'YTickLabel'), '°/(рад/с)' ));
colormap('default');
% -------------------------------------------------------------------------
figure('numbertitle', 'off',...
       'name','Результаты БПФ Кули - Тьюки');
surf(freq_x, freq_y, phi); grid on; shading interp; view(0,90);
xlim([freq_x(1) freq_x(end)]);
ylim([freq_y(1) freq_y(end)]);
title('Фазовый спектр (БПФ2) без коррекции и развертки',...
       tx(1), tx(2) ,tx(3), tx(4));
xlabel('Частота, \omega_{X} (рад/с)', tx(1), tx(2) ,tx(3), tx(4));
ylabel('Частота, \omega_{Y} (рад/с)', tx(1), tx(2) ,tx(3), tx(4));
zlabel('arg((F_{БПФ2}(j\omega_X, j\omega_Y)), °/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
colorbar('FontSize',12,...
         'FontName','Times New Roman',...
         'Color',[0 0 0], 'location','EastOutside');
colorbar('YTickLabel',strcat(get(colorbar,'YTickLabel'), '°/(рад/с)' ));
colormap('default');
% -------------------------------------------------------------------------
figure('numbertitle','off',...
       'name','Результаты БПФ Кули - Тьюки');
surf(freq_x, freq_y, phi_unwr); grid on; shading interp; view(0,90);
xlim([freq_x(1) freq_x(end)]);
ylim([freq_y(1) freq_y(end)]);
title('Развернутый фазовый спектр (БПФ2) без коррекции',...
       tx(1), tx(2) ,tx(3), tx(4));
xlabel('Частота, \omega_{X} (рад/с)', tx(1), tx(2) ,tx(3), tx(4));
ylabel('Частота, \omega_{Y} (рад/с)', tx(1), tx(2) ,tx(3), tx(4));
zlabel('arg((F_{БПФ2}(j\omega_X, j\omega_Y)), °/(рад/с)',...
        tx(1), tx(2) ,tx(3), tx(4));
colorbar('FontSize',12,...
         'FontName','Times New Roman',...
         'Color',[0 0 0], 'location','EastOutside');
colorbar('YTickLabel',strcat(get(colorbar,'YTickLabel'), '°/(рад/с)' ));
colormap('default');
clear all;
end
