% -- Разработчик: студент ФГАОУ ВО "СФУ" 5 курса ИИФиРЭ Дранишников А.С.---
% ----- Прямое, двумерное ДИСКРЕТНОЕ ПРЕОБРАЗОВАНИЕ ФУРЬЕ -----------------

% нет привязки к времени, фаза искажена т.о. теорема о сдвиге к вычисленному результату exp(-1i*2*pi*n*k/N)
% n - номер отсчета сигнала
% k - номер спектрального отсчета
% N - размерность образа
function X = dft2(x)

% x - действительная или комплексная матрица размером M*N
% Пример:
%     U = 4;      % Амплитуда, В
%     phi = pi/2; % Фаза, рад
%     A = U*ones(32,32).*exp(1i*phi*ones(32,32)); % Комплексная матрица
%     % A = U*ones(32,32);                        % Действительная матрица
%     rect = wextend(2,'zpd',A,[32,32]); % Нули (увеличение разр. по частоте)
%     y2 = fftshift(dft2(rect));
%     Sf1 = 32*32;  % Площадь исходной фигуры без нулевой матрицы, дискреты
%     surf(abs(y2)/Sf1);% Визуализация образа в частотной области
%     shading interp;
%     t0 = 'FontSize';
%         t1 = 12;
%     t2 = 'FontName';
%     t3 = 'TimesNewRoman';
%     title ('Образ прямого ДПФ')
%     xlabel('Отсчет {N_x}',t0,t1,t2,t3);
%     ylabel('Отсчет {N_y}',t0,t1,t2,t3);
%     zlabel('Амплитуда, { В}',t0,t1,t2,t3);
%     clear t0 t1 t2 t3 U phi Sf1 A rect y2;
% -------------------------------------------------------------------------
N = size(x);
X = zeros(N(1),N(2));
i = sqrt(-1);
h = waitbar(0,sprintf('Вычисление прямого ДПФ, матрицы N*M=%0.0f*%0.0f\n',N(1),N(2))); 
for l = 0:N(1)-1            % строки
    for k = 0:N(2)-1
        for n = 0:N(1)-1    % столбцы
            for m = 0:N(2)-1
                X(l+1,n+1) = X(l+1,n+1) + x(k+1,m+1)*exp((-i)*2*pi*(l*k/N(1)+n*m/N(2)));
            end
        end
    end
    waitbar(l/max(N));
end
close(h);
end
